
/**
 * Write a description of part3 here.
 * 
 * @author (your name) 
 * @version (a version number or a date)
 */
public class part3 {
    
     public int findStopCodon(String dna,int startIndex, String stopCodon)
    {
        // if start index == -1 ?? 
        
        int currIndex = dna.indexOf(stopCodon,startIndex+3);
        while( currIndex != -1)
        {
            if( (currIndex-startIndex) %3 ==0)
            {
                return currIndex;
            }
            currIndex= dna.indexOf(stopCodon,currIndex+1);
        }
  
        // If there is no such stopCodon, this method returns the length of the dna strand.
        return dna.length();
    }
    public void testFindStopCodon()
    {
        String dna = "xxxxzzzyyyTAAxxxgggttTAAxx";
        int dex= findStopCodon(dna,0, "TAA");
        
        /// need to finish writing tests
    }
    
    public String findGene(String dna, int startIndex)
    {
       
        if(startIndex == -1) 
        {
         return "";   
        }
         int indexTAA= findStopCodon(dna, startIndex, "TAA");
         int indexTAG = findStopCodon(dna, startIndex, "TAG");
         int indexTGA = findStopCodon(dna, startIndex, "TGA");
      
          int minIndex=0;
          if(indexTAA== -1 ||( indexTGA != -1 && indexTGA < indexTAA))
          {
              minIndex=indexTGA;
          }
          else 
          {
              minIndex=indexTAA;
          }
          
          if(minIndex ==-1 ||(indexTAG != -1 && indexTAG<minIndex))
          {
             minIndex=indexTAG; 
          }
          
        if(minIndex == -1) 
        {
            return "";
        }
               // if there is no stop codons
            if(minIndex == dna.length())
            {
                return "";  
            }
       return dna.substring(startIndex,minIndex+3);
           
    }
    
    public void printAllGenes (String dna)
    {
        int startIndex = 0 ;
        while (true)
        {
            String currentGene = findGene(dna,startIndex);
            if(currentGene.isEmpty())
            {
                break;
            }
            System.out.println(currentGene);
            startIndex=dna.indexOf(currentGene,startIndex)+currentGene.length();
            
        }
     
    }
    
    public int countGenes(String dna)
    {
        int startIndex = 0 ;
        int numberOfGenes=0;
        while (true)
        {
            String currentGene = findGene(dna,startIndex);
            if(currentGene.isEmpty())
            {
                break;
            }
            numberOfGenes++;
            startIndex=dna.indexOf(currentGene,startIndex)+currentGene.length();
        }
        return numberOfGenes;
    }
    
    public void testCountGenes()
    {
           String dna = "ATGCCCTAAGATGCCCTAGT";
        System.out.println("Gene count on " + dna + " = " + countGenes(dna));
    } 
}
